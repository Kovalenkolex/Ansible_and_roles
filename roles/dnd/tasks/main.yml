---
- name: Copy nginx configuration
  copy:
    content: |
      worker_processes auto;
      events {
          worker_connections 1024;
      }

      http {
          include       mime.types;
          default_type  applivattion/octet-stream;

          sendfile        on;
          keepalive_timeout  65;

          server {
              listen 80;
              server_name localhost;

              root /var/www/html;
              index index.php index.html;

              location / {
                  try_files $uri $uri/ =404;
              }

              location ~ \.php$ {
                  include fastcgi_params;
                  fastcgi_pass php:9000;
                  fastcgi_index index.php;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
              }

              location ~ /\.ht {
                  deny all;
              }
          }
      }

    dest: "{{ compose_file_path }}/nginx/nginx.conf"
    mode: '0644'


- name: Create Dockerfile for PHP
  copy:
    content: |
      FROM php:8.1-fpm

      # Установка расширений PHP
      RUN docker-php-ext-install pdo pdo_mysql

      # Копируем файлы нашего проекта в контейнер
      WORKDIR /var/www/html
      COPY . /var/www/html

      # Даем правильные права
      RUN chown -R www-data:www-data /var/www/html \
          && chmod -R 755 /var/www/html

      # Открываем порт для PHP
      EXPOSE 9000
    dest: "{{ compose_file_path }}/php/Dockerfile"
    mode: '0644'

- name: Copy Docker Compose file
  copy:
    content: |
      version: '3.8'

      services:
        nginx:
          image: nginx:latest
          ports:
            - "80:80"
          volumes:
            - ./nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./html:/var/www/html
          depends_on:
            - php
          networks:
            - app-network

        php:
          build: ./php
          volumes:
            - ./html:/var/www/html
          networks:
            - app-network

        mysql:
          image: mysql:5.7
          environment:
            MYSQL_ROOT_PASSWORD: root_password
            MYSQL_DATABASE: my_database
            MYSQL_USER: my_user
            MYSQL_PASSWORD: my_password
          volumes:
            - mysql_data:/var/lib/mysql
          networks:
            - app-network

      volumes:
        mysql_data:

      networks:
        app-network:
          driver: bridge
    dest: "{{ compose_file_path }}/docker-compose.yml"
    mode: '0644'

